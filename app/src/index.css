body {
margin: 0;
font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
sans-serif;
-webkit-font-smoothing: antialiased;
-moz-osx-font-smoothing: grayscale;
}

code {
font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
monospace;
}


/* index.css */

/* Main container */
.main-container {
display: flex;
height: 100vh; /* Full viewport height */
}

/* Finder */
.finder {
flex: 1; /* Takes up 1/3 of the screen width */
display: flex;
flex-direction: column;
height: 100%; /* Full viewport height */
}

/* Explorer */
.explorer {
flex: 2; /* Takes up 2/3 of the screen width */
display: flex; /* Ensure it's a flex container */
flex-direction: row; /* Children (ClipItemList and Preview) will be in a row */
height: 100%;
}

/* Finder-component */
.finder-component {
display: flex;
flex-direction: column;
height: 100%;
}

/* Explorer-component */
.explorer-component {
display: flex;
flex-direction: row; /* Children (ClipItemList and Preview) will be in a row */
height: 100%;
width: 100%;
}

/* ClipItemList */
.clipitemlist {
flex: 50%; /* Takes up 1/2 of the Explorer-component's width */
display: flex; /* Ensure it's a flex container */
overflow-y: auto; /* Enable scrolling if content overflows */
/* margin-right: 10px; */
}
/* Preview */
.preview {
flex: 50%; /* Takes up 1/2 of the Explorer's width */
display: flex; /* Ensure it's a flex container */
overflow-y: auto; /* Enable scrolling if content overflows */
}

/* Explorer-component */
.preview-controls-container {
display: flex;

flex-direction: column; /* Children (ClipItemList and Preview) will be in a row */
height: 100%;
width: 100%;
}


.controls-component {
display: flex;
width: 100%;
}



/* Controls */
.controls {
  height: 80px; /* Fixed height */
  display: flex; /* Ensure it's a flex container */
  justify-content: center; /* Center buttons horizontally */
  align-items: center; /* Center buttons vertically */
  overflow-y: auto; /* Enable scrolling if content overflows */
 }

/* Style buttons */
.controls-component button {
  background-color: transparent; /* Make buttons transparent */
  border: none; /* Remove default border */
  color: #333; /* Set text color */
  cursor: pointer; /* Change cursor to pointer on hover */
  padding: 10px; /* Add some padding */
  margin: 5px; /* Add some margin */
  border-radius: 5px; /* Rounded edges */
  transition: background-color 0.3s ease; /* Smooth transition for hover effect */
 }

/* Hide buttons by default and show on hover */
/* .controls-component button {
  visibility: hidden;
  } */

/* Change background color on hover */
.controls-component button:hover {
  background-color: #f0f0f0; /* Light grey background on hover */
 }

/* DisplayPreview */
.displaypreview {
  flex-grow: 1; /* Take up the remaining space */
  display: flex; /* Ensure it's a flex container */
  overflow-y: auto; /* Enable scrolling if content overflows */
 }

/* DisplayPreview */
.displaypreview-component {
flex: 1; /* Takes up all available space in the preview-controls-container */
overflow-y: auto; /* Enable scrolling if content overflows */
}








.edit-img {
width: 10px;
height: 10px;
}
.unedit-img {
width: 10px;
height: 10px;
}
.delete-img {
width: 10px;
height: 10px;
}

.message {
margin-top: 10px;
padding: 10px;
border-radius: 5px;
}

.message.success {
background-color: #dff0d8; /* Light green */
color: #3c763d; /* Dark green */
}

.message.error {
background-color: #f2dede; /* Light red */
color: #a94442; /* Dark red */
}

.tagcard-component.selected {
background-color: #f0f0f0; /* Example background color for selected state */
}
